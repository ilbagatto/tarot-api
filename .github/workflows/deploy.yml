name: Deploy Tarot API

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Run unit tests
        run: make test-unit

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Start containers and run tests
        run: |
          set -a
          source .env.test.example
          set +a
          docker compose -f docker-compose.test.yml up -d
          sleep 5
          go test -v ./tests/integration/...

      - name: Stop test containers
        if: always()
        run: docker compose -f docker-compose.test.yml down

  deploy:
    name: Deploy Release
    if: startsWith(github.ref, 'refs/tags/v')
    env:
        RESTART_SERVICE: ${{ secrets.RESTART_SERVICE }}    
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Build binary
        run: make build

      - name: Copy binary to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_KEY }}
          source: "tarot-api"
          target: ${{ secrets.PROD_PATH }}

      - name: Restart service
        if: env.RESTART_SERVICE == 'true'
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_KEY }}
          script: |
            sudo systemctl restart tarot-api